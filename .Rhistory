output$chart1 <- renderPlotly({
ggplot() +
labs(x = "Year", y = "Total",
title = "Population per Year"
) +
homeless <- geom_line(
data = input$total_input, aes(x = Year, y = Total, color = "red"), size = 1
) +
king_county <- geom_line(
data = input$total_input, aes(x = Year, y = Total, color = "blue"), size = 1
)
})
output$chart2 <- renderPlot({
# Creating map
getFeature <- function(inputName) {
if(inputName == "Count") {
return(map_data$count)
}
return(map_data$pop_percent)
}
getArgs <- function(inputType) {
if(inputType == "Count") {
return(scale_fill_continuous(
breaks = c(0, 5750, 11500),
labels = c("0", "5,750", "11,500"),
low = "#ffeda0", high = "#f03b20"
))
}
return(scale_fill_continuous(
breaks = c(0, 0.00125, 0.0025, 0.00375, 0.005),
labels = c("0%", "0.125%", "0.25%", "0.375%", "0.5%"),
low = "#ffeda0", high = "#f03b20"
))
}
homeless_heatmap <- ggplot(map_data, aes(long, lat, group = group)) +
geom_polygon(aes(fill = getFeature(input$feature_input)),
color = "black", size = 0.25) +
scale_fill_gradient(low = "#ffeda0", high = "#f03b20") +
xlab("Latitude") +
ylab("Longitude") +
labs(fill = input$feature_input) +
getArgs(input$feature_input)
return(homeless_heatmap)
})
output$chart3 <- renderPlotly({
cause_updated <- cause %>%
filter(Year == input$year_input) %>%
select(Cause, Count)
plot <- ggplot(data = cause_updated) +
geom_col(mapping = aes_string(x = "Cause", y = "Count"),
color = input$color_input) +
labs(x = "Causes", y = "Number of Instances",
title = paste0("Count of Causes of Homelessness in Seattle in ",
input$year_input)) +
coord_flip()
ggplotly(plot)
})
}
chart3_panel <- tabPanel(
"3rd Chart",
titlePanel("Bar Chart of Causes of Homelessness in Seattle"),
sidebarLayout(
sidebarPanel(
p("Choose a year and a color to display your bar chart!"),
year_input <- selectInput(
inputId = "year_input",
label = h3("Choose a year"),
choices = cause_year_choices
),
color_input <- selectInput(
inputId = "color_input",
label = h3("Choose a color"),
choices = brewer.pal(10, "Set3")
)
),
mainPanel(
plotlyOutput("chart3")
)
)
)
library(shiny)
library(rsconnect)
source("app_server.R")
source("app_ui.R")
shinyApp(ui = ui, server = server)
library(shiny)
library(rsconnect)
source("app_server.R")
source("app_ui.R")
shinyApp(ui = ui, server = server)
library(shiny)
library(rsconnect)
source("app_server.R")
source("app_ui.R")
shinyApp(ui = ui, server = server)
library(shiny)
library(rsconnect)
source("app_server.R")
source("app_ui.R")
shinyApp(ui = ui, server = server)
library(shiny)
library(ggplot2)
library(RColorBrewer)
library(plotly)
#load datasets
cause <- read.csv("INFO_cause.csv")
demographics <- read.csv("INFO_demographics.csv")
duration <- read.csv("INFO_duration_of_homeless.csv")
region <- read.csv("INFO_region.csv")
total <- read.csv("INFO_total.csv")
cause_year_choices <- c(unique(cause$Year))
cause_choices <- c(unique(cause$Cause))
intro_panel <- tabPanel(
"Introduction",
fluidPage(
h1("Homelessness in Washington"),
h3("Christian Calloway, My-An Pham, Rachel Wang, Yash Katwal"),
br(),
# Intro
strong("Introduction"),
hr(),
p("In this project, we will be exploring the state of homelessness
in Washington State. Throughout a series of different data
visualizations, we will be exploring a summary of the state
of homelessness, along with some different trends in the data.
The original data from the", strong(em("Count Us In")),
"dataset provided us with a framework to ask questions like
", em("what are the primary causes of homelessness in King County,"),
"or,", em("how has the percentage of homeless people grown over
the years?"),),
br(),
# Chart 1
strong("Chart One"),
hr(),
p("Made by", strong("My-An"), ". Chart 1 is a line graph that allows
the user to view the homeless population total and the King County
population total so that they can compare the two and see visual
representation of how much of the population is homeless."),
br(),
# Chart 2
strong("Chart Two"),
hr(),
p("Made by", strong("Christian"), ". Chart 2 is a
heat map/chloropleth map of homelessness throughout WA.
This chart was a bit different in that we had to create our own
excel spreadsheet to mutate different columns of data,
such as the homeless count in different counties, and
the percent of the population."),
br(),
# Chart 3
strong("Chart Three"),
hr(),
p("Made by", strong("Rachel"), ". Chart 3 is a bar chart that explores the
different causes of homelessness in Seattle from the years 2017 - 2020.
Users can select the year they want (as well as a fun color
choice) and view the different causes of homelessness and how common
they were."),
)
)
chart1_panel <- tabPanel(
"1st Chart",
titlePanel("Total Population per Year"),
sidebarLayout(
sidebarPanel(
selectInput(
inputId = "total_input",
label = "Choose a Total to View",
choices = c(homeless_population, king_county_population)
)
),
mainPanel(
plotOutput("chart1")
)
)
)
chart2_panel <- tabPanel(
"2nd Chart",
titlePanel("Homelessness Heatmap"),
sidebarLayout(
sidebarPanel(
selectInput(
inputId = "feature_input",
label = "Map Feature",
choices = c("Count", "Percent of Population")
)
),
mainPanel(
plotlyOutput("chart2")
)
)
)
chart3_panel <- tabPanel(
"3rd Chart",
titlePanel("Bar Chart of Causes of Homelessness in Seattle"),
sidebarLayout(
sidebarPanel(
p("Choose a year and a color to display your bar chart!"),
year_input <- selectInput(
inputId = "year_input",
label = h3("Choose a year"),
choices = cause_year_choices
),
color_input <- selectInput(
inputId = "color_input",
label = h3("Choose a color"),
choices = brewer.pal(10, "Set3")
)
),
mainPanel(
plotlyOutput("chart3")
)
)
)
conclusion_panel <- tabPanel(
"Conclusion"
)
ui <- navbarPage(
"Final Deliverable: Homelessness in Seattle",
intro_panel,
chart1_panel,
chart2_panel,
chart3_panel,
conclusion_panel
)
library(shiny)
library(rsconnect)
source("app_server.R")
source("app_ui.R")
shinyApp(ui = ui, server = server)
library(shiny)
library(rsconnect)
source("app_server.R")
source("app_ui.R")
shinyApp(ui = ui, server = server)
library(shiny)
library(dplyr)
library(ggplot2)
library(plotly)
library(stringr)
# Source data
source("chart_two.R")
#load datasets
cause <- read.csv("INFO_cause.csv")
demographics <- read.csv("INFO_demographics.csv")
duration <- read.csv("INFO_duration_of_homeless.csv")
region <- read.csv("INFO_region.csv")
total <- read.csv("INFO_total.csv")
server <- function(input, output) {
output$chart1 <- renderPlotly({
line_graph <- ggplot(data = total) +
labs(x = "Year", y = "Total",
title = paste0(input$total_input, "per Year")
) +
geom_line(
data = input$total_input, aes(x = Year, y = Total, color = "blue"), size = 1
)
})
output$chart2 <- renderPlot({
# Creating map
getFeature <- function(inputName) {
if(inputName == "Count") {
return(map_data$count)
}
return(map_data$pop_percent)
}
getArgs <- function(inputType) {
if(inputType == "Count") {
return(scale_fill_continuous(
breaks = c(0, 5750, 11500),
labels = c("0", "5,750", "11,500"),
low = "#ffeda0", high = "#f03b20"
))
}
return(scale_fill_continuous(
breaks = c(0, 0.00125, 0.0025, 0.00375, 0.005),
labels = c("0%", "0.125%", "0.25%", "0.375%", "0.5%"),
low = "#ffeda0", high = "#f03b20"
))
}
homeless_heatmap <- ggplot(map_data, aes(long, lat, group = group)) +
geom_polygon(aes(fill = getFeature(input$feature_input)),
color = "black", size = 0.25) +
scale_fill_gradient(low = "#ffeda0", high = "#f03b20") +
xlab("Latitude") +
ylab("Longitude") +
labs(fill = input$feature_input) +
getArgs(input$feature_input)
return(homeless_heatmap)
})
output$chart3 <- renderPlotly({
cause_updated <- cause %>%
filter(Year == input$year_input) %>%
select(Cause, Count)
plot <- ggplot(data = cause_updated) +
geom_col(mapping = aes_string(x = "Cause", y = "Count"),
color = input$color_input) +
labs(x = "Causes", y = "Number of Instances",
title = paste0("Count of Causes of Homelessness in Seattle in ",
input$year_input)) +
coord_flip()
ggplotly(plot)
})
}
library(shiny)
library(rsconnect)
source("app_server.R")
source("app_ui.R")
shinyApp(ui = ui, server = server)
library(shiny)
library(rsconnect)
source("app_server.R")
source("app_ui.R")
shinyApp(ui = ui, server = server)
library(shiny)
library(ggplot2)
library(RColorBrewer)
library(plotly)
#load datasets
cause <- read.csv("INFO_cause.csv")
demographics <- read.csv("INFO_demographics.csv")
duration <- read.csv("INFO_duration_of_homeless.csv")
region <- read.csv("INFO_region.csv")
total <- read.csv("INFO_total.csv")
cause_year_choices <- c(unique(cause$Year))
cause_choices <- c(unique(cause$Cause))
intro_panel <- tabPanel(
"Introduction",
fluidPage(
h1("Homelessness in Washington"),
h3("Christian Calloway, My-An Pham, Rachel Wang, Yash Katwal"),
br(),
# Intro
strong("Introduction"),
hr(),
p("In this project, we will be exploring the state of homelessness
in Washington State. Throughout a series of different data
visualizations, we will be exploring a summary of the state
of homelessness, along with some different trends in the data.
The original data from the", strong(em("Count Us In")),
"dataset provided us with a framework to ask questions like
", em("what are the primary causes of homelessness in King County,"),
"or,", em("how has the percentage of homeless people grown over
the years?"),),
br(),
# Chart 1
strong("Chart One"),
hr(),
p("Made by", strong("My-An"), ". Chart 1 is a line graph that allows
the user to view the homeless population total and the King County
population total so that they can compare the two and see visual
representation of how much of the population is homeless."),
br(),
# Chart 2
strong("Chart Two"),
hr(),
p("Made by", strong("Christian"), ". Chart 2 is a
heat map/chloropleth map of homelessness throughout WA.
This chart was a bit different in that we had to create our own
excel spreadsheet to mutate different columns of data,
such as the homeless count in different counties, and
the percent of the population."),
br(),
# Chart 3
strong("Chart Three"),
hr(),
p("Made by", strong("Rachel"), ". Chart 3 is a bar chart that explores the
different causes of homelessness in Seattle from the years 2017 - 2020.
Users can select the year they want (as well as a fun color
choice) and view the different causes of homelessness and how common
they were."),
)
)
chart1_panel <- tabPanel(
"1st Chart",
titlePanel("Total Population per Year"),
sidebarLayout(
sidebarPanel(
total_input <- selectInput(
inputId = "total_input",
label = "Choose a Total Population to View",
choices = c(homeless_population, king_county_population)
)
),
mainPanel(
plotOutput("chart1")
)
)
)
chart2_panel <- tabPanel(
"2nd Chart",
titlePanel("Homelessness Heatmap"),
sidebarLayout(
sidebarPanel(
selectInput(
inputId = "feature_input",
label = "Map Feature",
choices = c("Count", "Percent of Population")
)
),
mainPanel(
plotlyOutput("chart2")
)
)
)
chart3_panel <- tabPanel(
"3rd Chart",
titlePanel("Bar Chart of Causes of Homelessness in Seattle"),
sidebarLayout(
sidebarPanel(
p("Choose a year and a color to display your bar chart!"),
year_input <- selectInput(
inputId = "year_input",
label = h3("Choose a year"),
choices = cause_year_choices
),
color_input <- selectInput(
inputId = "color_input",
label = h3("Choose a color"),
choices = brewer.pal(10, "Set3")
)
),
mainPanel(
plotlyOutput("chart3")
)
)
)
conclusion_panel <- tabPanel(
"Conclusion"
)
ui <- navbarPage(
"Final Deliverable: Homelessness in Seattle",
intro_panel,
chart1_panel,
chart2_panel,
chart3_panel,
conclusion_panel
)
library(shiny)
library(dplyr)
library(ggplot2)
library(plotly)
library(stringr)
# Source data
source("chart_two.R")
#load datasets
cause <- read.csv("INFO_cause.csv")
demographics <- read.csv("INFO_demographics.csv")
duration <- read.csv("INFO_duration_of_homeless.csv")
region <- read.csv("INFO_region.csv")
total <- read.csv("INFO_total.csv")
server <- function(input, output) {
output$chart1 <- renderPlotly({
line_graph <- ggplot(data = total) +
labs(x = "Year", y = input$total_input,
title = paste0(input$total_input, "per Year")
) +
geom_line(
mapping = aes_string(x = "Year", y = input$total_input, color = "blue"), size = 1
)
ggplotly(line_graph)
})
output$chart2 <- renderPlot({
# Creating map
getFeature <- function(inputName) {
if(inputName == "Count") {
return(map_data$count)
}
return(map_data$pop_percent)
}
getArgs <- function(inputType) {
if(inputType == "Count") {
return(scale_fill_continuous(
breaks = c(0, 5750, 11500),
labels = c("0", "5,750", "11,500"),
low = "#ffeda0", high = "#f03b20"
))
}
return(scale_fill_continuous(
breaks = c(0, 0.00125, 0.0025, 0.00375, 0.005),
labels = c("0%", "0.125%", "0.25%", "0.375%", "0.5%"),
low = "#ffeda0", high = "#f03b20"
))
}
homeless_heatmap <- ggplot(map_data, aes(long, lat, group = group)) +
geom_polygon(aes(fill = getFeature(input$feature_input)),
color = "black", size = 0.25) +
scale_fill_gradient(low = "#ffeda0", high = "#f03b20") +
xlab("Latitude") +
ylab("Longitude") +
labs(fill = input$feature_input) +
getArgs(input$feature_input)
return(homeless_heatmap)
})
output$chart3 <- renderPlotly({
cause_updated <- cause %>%
filter(Year == input$year_input) %>%
select(Cause, Count)
plot <- ggplot(data = cause_updated) +
geom_col(mapping = aes_string(x = "Cause", y = "Count"),
color = input$color_input) +
labs(x = "Causes", y = "Number of Instances",
title = paste0("Count of Causes of Homelessness in Seattle in ",
input$year_input)) +
coord_flip()
ggplotly(plot)
})
}
library(shiny)
library(rsconnect)
source("app_server.R")
source("app_ui.R")
shinyApp(ui = ui, server = server)
